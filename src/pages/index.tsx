import { GetServerSidePropsContext, type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";

type WorldTimeAPIResponse = {
  abbreviation: string;
  client_ip: string;
  datetime: Date;
  day_of_week: number;
  day_of_year: number;
  dst: boolean;
  dst_from: Date;
  dst_offset: number;
  dst_until: Date;
  raw_offset: number;
  timezone: string;
  unixtime: number;
  utc_datetime: Date;
  utc_offset: string;
  week_number: number;
}


const Home: NextPage<{ data: WorldTimeAPIResponse }> = ({ data }) => {

  const { datetime } = data

  const [date, time] = datetime.split('T')
  const [year, month, day] = date.split('-')
  const [hour, minute, second] = time.split(':')

  const [quote, setQuote] = useState<QuotableAPIResponse | null>(null)

  useEffect(() => {
    getQuote().then(data => setQuote(data))
  }, [])

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-zinc-800">
        <div className="container mx-auto flex flex-col py-14">
          {quote && (
            <div className="text-white ">
              <div className="flex items-start gap-3">
                <p className="max-w-lg w-96">"{quote.content}"</p>

                <button
                  onClick={() => getQuote().then(data => setQuote(data))}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={2} stroke="currentColor" className="w-6 h-6 text-gray-200">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
                  </svg>
                </button>
              </div>

              <h2 className="font-bold mt-2">{quote.author}</h2>
            </div>
          )}



        </div>
      </main>
    </>
  );
};

export default Home;

// get api info from http://worldtimeapi.org/api/ip  

export async function getServerSideProps(context: GetServerSidePropsContext) {

  const res = await fetch('http://worldtimeapi.org/api/ip')
  const data = await res.json()


  return {
    props: {
      data
    }
  }
}


type QuotableAPIResponse = {
  _id: string;
  content: string;
  author: string;
  tags: string[];
  authorSlug: string;
  length: number;
  dateAdded: Date;
  dateModified: Date;
}


// when this funciton is called, fetch https://api.quotable.io/random and return the data
const getQuote = async () => {
  const res = await fetch('https://api.quotable.io/random')
  const data = await res.json()

  return data as QuotableAPIResponse
}
